var isChecking=false;class equidItem{constructor(){this.Array=[]}add_item(e){e.gen_json();e.gen_html();this.Array.push(e)}save_data(){sessionStorage.setItem("equidItem",JSON.stringify(this.Array))}async check_total(){for(let e of this.Array){if(e.search_on==false)continue;e.get_total();await new Promise(e=>setTimeout(e,1e4))}}check_containts(e){var t=e.to_string();for(var a=0;a<this.Array.length;a++){if(this.Array[a].to_string()==t){return true}}return false}print_link(){for(var e=0;e<this.Array.length;e++){console.log(this.Array[e].search_link)}}print_total(){for(var e=0;e<this.Array.length;e++){console.log(this.Array[e].total+" "+this.Array[e].id)}}}class Item{constructor(e,t){this.rare=t;this.name=e;this.id=e.replace(/[^a-zA-Z]/g,"");this.baseName=e.split(",")[1];this.modified=[];this.search_json="";this.search_link="";this.total=0;this.trade_id="";this.Postfixhtml=`
                </ul>
              </div>
            </div>
          </div>
    `;this.html="";this.search_on=false}create_with_json(e){return}gen_html(e="loadHtml"){var t=this.gen_link();const a=this.name.length>30?this.name.substring(0,27)+"...":this.name.substring(0,30).padEnd(30,"Â ");var r=`
    <div class="accordion-item card ${this.name.replace(/[^a-zA-Z]/g,"")}-out">
            <h3 class="accordion-header fs-tiny">
              <button type="button" class="accordion-button collapsed noti-card" data-bs-toggle="collapse" data-bs-target="#${this.name.replace(/[^a-zA-Z]/g,"")}" aria-expanded="false">
                <strong><a href="${t}">${a}</a> Total: <span class="total${this.name.replace(/[^a-zA-Z]/g,"")}">0</span>    </strong>
                <span><input class="auto-check" type="checkbox" id="${this.name.replace(/[^a-zA-Z]/g,"")}-check"><label for="${this.name.replace(/[^a-zA-Z]/g,"")}-check">Auto Check?</label></span>
              </button>
            </h3>
          
            <div id="${this.name.replace(/[^a-zA-Z]/g,"")}" class="accordion-collapse collapse" data-bs-parent="#accordionStyle1">
              <div class="accordion-body" id="${this.name.replace(/[^a-zA-Z]/g,"")}-in">
                <ul class="result">
                `;this.html=r+this.html+this.Postfixhtml;chrome.runtime.sendMessage({type:e,data:this.html,id:this.id,link:t})}add_modified(e,t=false){var a=e.values;var r=e.index;e=String(e.attribute);if(!t){this.html+=`<li>
        <input index="${r}" value="${a}" class="mx-2 my-1" type="checkbox" id="${this.name.replace(/[^a-zA-Z]/g,"")+e.replace(/[^a-zA-Z]/g,"")}" checked>
        <label for="${this.name.replace(/[^a-zA-Z]/g,"")+e.replace(/[^a-zA-Z]/g,"")}">${e}</label>
      </li>`;this.modified.push({mod:e,ids:this.get_id_modified(e,t),values:a})}else{if(r!=4){this.html+=`<li>
          <input index="${r}" value="${a}" class="mx-2 my-1" type="checkbox" id="${this.name.replace(/[^a-zA-Z]/g,"")+e.replace(/[^a-zA-Z]/g,"")}" checked>
          <label for="${this.name.replace(/[^a-zA-Z]/g,"")+e.replace(/[^a-zA-Z]/g,"")}">${e}</label>
        </li>`;this.modified.push({mod:e,ids:this.get_id_modified(e,t),values:a})}else{this.html+=`<li>
          <input index="${r}" value="${a}" class="mx-2 my-1" type="checkbox" id="${this.name.replace(/[^a-zA-Z]/g,"")+e.replace(/[^a-zA-Z]/g,"")}">
          <label for="${this.name.replace(/[^a-zA-Z]/g,"")+e.replace(/[^a-zA-Z]/g,"")}">${e}</label>
        </li>`}}}remove_modified(t){var e=t.values;var a=t.index;t=String(t.attribute);this.modified=this.modified.filter(e=>e.mod!==t);this.html=this.html.replace(`<li>
        <input index="${a}" value="${e}" class="mx-2 my-1" type="checkbox" id="${this.name.replace(/[^a-zA-Z]/g,"")+t.replace(/[^a-zA-Z]/g,"")}" checked>
        <label for="${this.name.replace(/[^a-zA-Z]/g,"")+t.replace(/[^a-zA-Z]/g,"")}">${t}</label>
      </li>`,"")}gen_json(e=true){if(!e){var e="any"}else{var e="online"}var t=this.modified;if(this.baseName===""){var a=`{"query": {"stats": [`}else{var a=`{"query": {"type": "`+this.baseName+`","stats": [`}var r=`]},"status": {"option": "${e}"}}`;var i="";var s=0;for(let e of t){s++;if(e.ids.length==0)continue;if(e.values.length<2){var n=this.gen_stat(e.ids)}else{var n=this.gen_stat(e.ids,e.values)}if(s<t.length)n+=",";i+=n}if(i.slice(-1)==",")i=i.slice(0,-1);var l=a+i+r;this.search_json=l}gen_stat(t,e=[1e3,-1e3]){var a=-1e3;var r=1e3;var i="";if(t.length==0)return i;var s=`{
      "type": "count",
      "value": {
        "max": 1,
        "min": 1
      },
      "filters": [`;var n=`],
      "disabled": false
    }`;var l=0;for(let e of t){i+=`{"id": "`+e.id+`","value": {"max": `+r+`,"min": `+a+`},"disabled": false}`;if(l<t.length-1)i+=",";l++}var o=s+i+n;return o}to_string(){return this.name+" "+this.modified}get_id_modified(e,t){e=e.replace(" -"," +");e=e.replace("-#","+#");const a=JSON.parse(localStorage.getItem("data"));const r=new RegExp(e.replace(/([.*+?^=!:${}()|\[\]\/\\])/g,"\\$1").replace(/#/g,"(\\d+|#)"),"g");const i=new RegExp("^"+e.replace(/([.*?^=!:${}()|\[\]\/\\])/g,"\\$1").replace(/#/g,"(\\d+|#)").replace(/\+/g,"\\+")+"$");var s=[];var n=false;var l="";a.result.forEach(e=>{e.entries.forEach(e=>{if(e.text.match(i)&&n===false&&s.length<=100){s.push(e)}else if(e.text.match(i)){if(n===false){n=true;s=[]}s.push(e)}})});const o=e+" (Local)";const c=new RegExp("^"+o.replace(/([.*?^=!:${}()|\[\]\/\\])/g,"\\$1").replace(/#/g,"(\\d+|#)").replace(/\+/g,"\\+")+"$");var n=false;a.result.forEach(e=>{e.entries.forEach(e=>{if(e.text.match(c)&&n===false&&s.length<=100){s.push(e)}else if(e.text.match(c)){if(n===false){n=true;s=[]}s.push(e)}})});return s}gen_link(){var e="https://www.pathofexile.com/trade/search/Settlers?q=";var t=encodeURIComponent(this.search_json);var a=e+t;this.search_link=a;return a}get_total(){const t=this;const e=JSON.stringify(this.search_json);const a="https://www.pathofexile.com/api/trade/search/Settlers";chrome.runtime.sendMessage({type:"getTotal",data:e},function(e){t.total=parseInt(e.total);t.trade_id=e.id;chrome.runtime.sendMessage({type:"UpdateTotal",total:t.total,id:t.id,trade_id:t.trade_id})})}}if(!window.location.href.includes("pobb.in")){throw null}console.log("Start");if(localStorage.getItem("data")===null){fetch(chrome.runtime.getURL("json/stat.json")).then(e=>{if(!e.ok){throw new Error("Network response was not ok")}return e.json()}).then(e=>{localStorage.setItem("data",JSON.stringify(e))}).catch(e=>{console.error("Fetch error:",e);return null})}var start=false;let observers=[];const targetNodes=document.querySelectorAll("div.absolute.z-30.pointer-events-none.hidden.overflow-hidden");const config={attributes:true,childList:true,subtree:true};const returnedValues=new Set;let currentItemContent="";const eqItem=new equidItem;chrome.runtime.onMessage.addListener((e,t,a)=>{if(e.action==="buttonClicked"){const o=e.implict;if(!start){start=true;const i=function(t,e){for(let e of t){if(e.type==="childList"||e.type==="attributes"){const n=Array.from(e.target.querySelectorAll("div")).map(e=>e.textContent).join("\n");if(n!==currentItemContent){returnedValues.clear();currentItemContent=n}var a="";e.target.querySelectorAll("div").forEach(e=>{const t=e.childNodes.length===1&&e.childNodes[0].nodeType===Node.TEXT_NODE?e.textContent:"";if(t&&!returnedValues.has(t)){a+=t+",";returnedValues.add(t)}});if(a!=""){var r=e.target.getAttribute("data-rarity");var l=new Item(a,r);var i=e.target.querySelector(".p-2.pt-1.leading-tight").innerHTML;var s=i.split(/(?=<ul>|<!---->)/);s.forEach((e,n)=>{var t=document.createElement("div");t.innerHTML=e;t.querySelectorAll("li").forEach(i=>{if(!returnedValues.has(i.textContent)){var s=i.textContent;let e=e=>{let t=e.match(/([+\-]?\d+(\.\d+)?%?)|(\(\d+-\d+\)%)/g);if(t){return t.map(e=>e.replace(/[()%]/g,"").replace("%","").trim())}return[]};let t=e(s);let a=s;t.forEach((e,t)=>{if(Math.abs(e)>0&&t===0){a=a.replace(Math.abs(e),"#")}else{a=a.replace(e,"#")}});a=a.replace(/[()]/g,"").trim();a=a.replace(/#+/g,"#");let r={attribute:a,values:t.map(e=>e.replace("%","")),index:n};if(o){l.add_modified(r,o)}else{l.add_modified(r)}returnedValues.add(r)}})});if(!eqItem.check_containts(l)){eqItem.add_item(l)}}}}};targetNodes.forEach(e=>{const t=new MutationObserver(i);t.observe(e,config);observers.push(t)});const s=document.querySelectorAll("img");function r(){s.forEach((t,e)=>{setTimeout(()=>{const e=new Event("mouseover");t.dispatchEvent(e)},e*1)})}r()}else{start=false;observers.forEach(e=>e.disconnect());observers=[]}}});async function waitCheckTotal(e){await e.check_total()}function print_array(){if(eqItem.Array.length==0)return}var checkState=false;async function auto_check(){try{if(isChecking||!checkState)return;isChecking=true;await waitCheckTotal(eqItem);isChecking=false}catch(e){console.log(e)}}(function(){var e=document.createElement("div");e.style.position="fixed";e.style.top="0";e.style.right="0";e.style.width="500px";e.style.height=window.innerHeight+"px";e.style.backgroundColor="white";e.style.zIndex="10000";document.body.appendChild(e);var t=document.createElement("iframe");t.src=chrome.runtime.getURL("popup.html");t.style.width="100%";t.style.height="100%";t.style.border="none";e.appendChild(t);document.body.style.marginRight="500px";window.addEventListener("resize",function(){e.style.height=window.innerHeight+"px";document.body.style.marginRight="500px"});setInterval(auto_check,1e3)})();chrome.runtime.onMessage.addListener(function(e,t,a){if(e.type==="addMod"){var r=e.data.id;for(var i=0;i<eqItem.Array.length;i++){if(eqItem.Array[i].id==r){eqItem.Array[i].add_modified(e.data.result,e.data.isImplict);eqItem.Array[i].gen_json();eqItem.Array[i].gen_html("changeHtml")}}}if(e.type==="removeMod"){var r=e.data.id;for(var i=0;i<eqItem.Array.length;i++){if(eqItem.Array[i].id==r){eqItem.Array[i].remove_modified(e.data.result);eqItem.Array[i].gen_json();eqItem.Array[i].gen_html("changeHtml")}}}if(e.type==="onCheck"){var r=e.data.id;for(var i=0;i<eqItem.Array.length;i++){if(eqItem.Array[i].id==r){eqItem.Array[i].search_on=true;break}}}if(e.type==="offCheck"){var r=e.data.id;for(var i=0;i<eqItem.Array.length;i++){if(eqItem.Array[i].id==r){eqItem.Array[i].search_on=false;break}}}if(e.type==="autoCheck"){checkState=e.auto}});